---
    name: build and deliver cowsay app
    
    on:
      workflow_dispatch:
        inputs:
          version:
            description: "Version de l'image docker"
            required: false
            default: 'auto'
      push:
        branches:
            - versionning
    
    env:
      REGISTRY: docker.io
    
    jobs:
      build:
        name: build go code into binary
        runs-on: ubuntu-latest
        strategy:
          matrix:
              go-arch: [ 'amd64', 'arm64' ]
    
        steps:
          - name: Get Code from repo
            uses: actions/checkout@v4
    
          - name: Setup Go
            uses: actions/setup-go@v5
            with:
              go-version: '>=1.23'
    
          - name: récuperer le numero de verion
            id: version
            run: |
              #Si l'entrée version est laissée à "auto", on incrémente la version
              if [ "${{ github.event.inputs.version }}" == "auto" ]; then
                  #Vérifie si le fichier version.txt existe
                  if [ -f version.txt ]; then
                    #Lire la version actuelle et incrémenter
                      version=$(cat version.txt)
                      version_number=$(($version + 1))
                  else
                      #Si le fichier n'existe pas, on commence à la version 1
                      version_number=1
                  fi
                  #Sauvegarder la nouvelle version dans version.txt
                  echo "Nouvelle version: $version_number" > version.txt
                  echo "version=$version_number" >> $GITHUB_ENV
              else
                  #Si une version spécifique est fournie par l'utilisateur
                  echo "version=${{ github.event.inputs.version }}" >> ${GITHUB_ENV}
              fi
    
          - run: |
              go mod init Projet/main.go
              go mod tidy
              GOARCH=${{ matrix.go-arch }} go build -o bin/gocow Projet/main.go
    
          - name: Upload static files as artifact
            id: deployment
            uses: actions/upload-artifact@v4 # or specific "vX.X.X" version tag for this action
            with:
              path: .
              name: cowsaybin-${{ matrix.go-arch }}
      
      push-docker:
        name: push in docker registry
        needs: build
        runs-on: ubuntu-latest
        strategy:
          matrix:
              go-arch: [ 'amd64', 'arm64' ]
        steps:
    
          - uses: actions/download-artifact@v4
            with:
              path: .
              name: cowsaybin-${{ matrix.go-arch }}
              
          - name: Build Docker Image
            run: |
               docker build -t ${{ env.version }} .
               
          - name: Push To Dockerhub
            run: |
                docker login -u ${{ vars.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
                docker push ${{ env.version }}

          - name: Commit and push version update
            if: ${{ github.event.inputs.version == 'auto' }}
            run: |
              git config --global user.name "Guigan713"
              git config --global user.email "guillaume.lequin713@gmail.com"
              git add version.txt
              git commit -m "Incrémentation du numéro de version à ${{ env.version }}"
              git push origin main
    
      # deploy:
      #   needs: build
      #   runs-on: ubuntu-latest
          # strategy:
          # matrix:
          #     go-arch: [ 'amd64', 'arm64' ]
      #   steps:
      #     - uses: actions/download-artifact@v4
      #       with:
      #         path: .
      #         name: cowsaybin-${{ matrix.go-arch }}
      #     - run: ./Projet/main
    
    
    