---
name: build and deliver cowsay app

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version de l'image docker"
        required: false
        default: 'auto'
  push:
    branches:
        - main

env:
  REGISTRY: docker.io

jobs:
  build:
    name: build go code into binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
          go-arch: [ 'amd64', 'arm64' ]

    steps:
      - name: Get Code from repo
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '>=1.23'

      - run: |
          go mod init Projet/main.go
          go mod tidy
          GOARCH=${{ matrix.go-arch }} go build -o bin/gocow Projet/main.go

      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-artifact@v4 # or specific "vX.X.X" version tag for this action
        with:
          path: .
          name: cowsaybin-${{ matrix.go-arch }}
  
  push-docker:
    name: push in docker registry
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
          go-arch: [ 'amd64', 'arm64' ]
    steps:

      - uses: actions/download-artifact@v4
        with:
          path: .
          name: cowsaybin-${{ matrix.go-arch }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set version tag
        id: version
        run: |
          VERSION_TAG="v${{ github.run_number }}"
          echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ vars.DOCKERHUB_USERNAME}}/gocow:latest
            ${{ vars.DOCKERHUB_USERNAME}}/gocow:${{ env.VERSION_TAG }}
          platforms: linux/${{ matrix.go-arch }}
          
      - name: Commit and push version update
        if: ${{ github.event.inputs.version == 'auto' }}
        run: |
          git config --global user.name "Guigan713"
          git config --global user.email "guillaume.lequin713@gmail.com"
          git add version.txt
          git commit -m "Incrémentation du numéro de version à ${{ env.VERSION_TAG }}"
          git push origin main
          
  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
      # strategy:
      # matrix:
      #     go-arch: [ 'amd64', 'arm64' ]
  #   steps:
  #     - uses: actions/download-artifact@v4
  #       with:
  #         path: .
  #         name: cowsaybin-${{ matrix.go-arch }}
  #     - run: ./Projet/main


